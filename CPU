== NETWORKING ==

Requirements:
send and receive packets. packet contains src address, dst address, and the actual content.
subsequent interrupts will not do anything. so lets just have one register. 

Receiving information: 
set registers, and set the interrupt bit.

if CPU is listening for interrupts, then:
CPU immediately sets register to 0. it also sets busy bit to 1. then it does what it needs to do. then it sets busy to 0 again.

Sending information:
CPU check if other guy is busy.  if not busy, then set registers.
CPU sets a interrupt register.

Flow:
A wants to send B something.

A checks B's interrupt bit.
A sets B's memory.
A sets B's SIGNAL.
Both SIGNAL and IDLE are True. PC is PC_SIGNAL Now. (from here the pc_signal is incremented rather than PC)
    IDLE is set to false. (prevent signal and idle both set to true).
    B does other processing. 
    B sets SIGNAL to false.
    B sets IDLE to true. # make this 1 insn before the last one.
    (now pc is incremented rather than pc_signal).
A will not attempt to send again until interrupt is 0.

Byte addressing. This means 0 

Reserved Memory Address Assignments:
PC: 32bits  -  program counter register.
PC_SIGNAL: 32bits - program counter signal. PC to use if both SIGNAL and IDLE are true.
SIGNAL: 8bits - signal that can be set by other machines. 0 interruptable. 1 interrupted.
IDLE = 8bits  - 0 means not available. 1 available(idle).
SP - stack pointer. 32 bits. current location in memory stack.
save 34-64 for future.

some portion of memory must be nvram.

1. first set the pc_int to some address.
